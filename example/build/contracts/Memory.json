{
  "contractName": "Memory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_invalid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_revert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testOpcodes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testOpcodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_invalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_revert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/memory.sol\":\"Memory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/Abstracts/TestContractInterface.sol\":{\"keccak256\":\"0x2a83f99436ca7b4e546b078430361c5735fd431b9903a395b5eb5e4903f4f586\",\"urls\":[\"bzz-raw://9bb80a4bc39e1c0508485bd39666fb3a9c97b7bad99b3b056faf1fef8d562dd4\",\"dweb:/ipfs/Qmb3EMbftSbK5Gop66GHUuhwkDMP4mBn21DaohFbLq1hzk\"]},\"/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/memory.sol\":{\"keccak256\":\"0x6aac65a2df0194b44320392a0927e89fd05907dcdf3882dc8b85294e73d65a3c\",\"urls\":[\"bzz-raw://f41fbac61d282798ca80654ab0161d08014367f262e4b7ff8708529c8f8f0de1\",\"dweb:/ipfs/QmSs2t3Uj2Pho8iWnnKsqQXAYhiLNSfUhhdRNZ31z9R8qq\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610147806100536000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063391521f41461005c57806355313dea146100665780636d3d1416146100705780638da5cb5b1461007a578063b9d1e5aa146100c4575b600080fd5b6100646100ce565b005b61006e6100e4565b005b6100786100e6565b005b6100826100eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100cc610110565b005b60006212d6879050604051818152600481535050565b005b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565bfefea265627a7a72315820a3c2d2625010cc560ab6a9ac423bac264065d0dd5ec2b34f3b4b038e84c764de64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063391521f41461005c57806355313dea146100665780636d3d1416146100705780638da5cb5b1461007a578063b9d1e5aa146100c4575b600080fd5b6100646100ce565b005b61006e6100e4565b005b6100786100e6565b005b6100826100eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100cc610110565b005b60006212d6879050604051818152600481535050565b005b600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565bfefea265627a7a72315820a3c2d2625010cc560ab6a9ac423bac264065d0dd5ec2b34f3b4b038e84c764de64736f6c63430005100032",
  "sourceMap": "74:369:12:-;;;123:10:1;115:5;;:18;;;;;;;;;;;;;;;;;;74:369:12;;;;;;",
  "deployedSourceMap": "74:369:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74:369:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;121:317;;;:::i;:::-;;455:50:1;;;:::i;:::-;;333:58;;;:::i;:::-;;61:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;395:56;;;:::i;:::-;;121:317:12;158:6;175:7;158:25;;263:4;257:11;339:1;336;329:12;377:1;374;366:13;198:235;;:::o;455:50:1:-;495:6;333:58;385:1;382;375:12;61:20;;;;;;;;;;;;;:::o;395:56::-;438:9",
  "source": "pragma solidity <0.6.0;\n\nimport \"./Abstracts/TestContractInterface.sol\";\n\ncontract Memory is TestContractInterface {\n\n\n  function testOpcodes() public {\n\n    uint b = uint256(1234567);\n\n    assembly{\n\n        //load the free memory pointer\n        let a := mload(0x40)\n        //store uint256 of apples in first 32 bytes\n        mstore(a, b)\n        //add 4\n        mstore8(a, 4)\n        //this gonna be 0\n        pop(msize())\n\n    }\n\n  }\n  \n}",
  "sourcePath": "/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/memory.sol",
  "ast": {
    "absolutePath": "/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/memory.sol",
    "exportedSymbols": {
      "Memory": [
        416
      ]
    },
    "id": 417,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 401,
        "literals": [
          "solidity",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 402,
        "nodeType": "ImportDirective",
        "scope": 417,
        "sourceUnit": 66,
        "src": "25:47:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 403,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 65,
              "src": "93:21:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$65",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 404,
            "nodeType": "InheritanceSpecifier",
            "src": "93:21:12"
          }
        ],
        "contractDependencies": [
          65
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 416,
        "linearizedBaseContracts": [
          416,
          65
        ],
        "name": "Memory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "151:287:12",
              "statements": [
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "158:6:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "158:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31323334353637",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "175:7:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1234567_by_1",
                          "typeString": "int_const 1234567"
                        },
                        "value": "1234567"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1234567_by_1",
                          "typeString": "int_const 1234567"
                        }
                      ],
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "167:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "158:25:12"
                },
                {
                  "externalReferences": [
                    {
                      "b": {
                        "declaration": 408,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "339:1:12",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 413,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let a := mload(0x40)\n    mstore(a, b)\n    mstore8(a, 4)\n    pop(msize())\n}",
                  "src": "190:243:12"
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:2:12"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "151:0:12"
            },
            "scope": 416,
            "src": "121:317:12",
            "stateMutability": "nonpayable",
            "superFunction": 49,
            "visibility": "public"
          }
        ],
        "scope": 417,
        "src": "74:369:12"
      }
    ],
    "src": "0:443:12"
  },
  "legacyAST": {
    "absolutePath": "/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/memory.sol",
    "exportedSymbols": {
      "Memory": [
        416
      ]
    },
    "id": 417,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 401,
        "literals": [
          "solidity",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/home/greg/code/github.com/ChainSafe/truffle-plugin-abigen/example/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 402,
        "nodeType": "ImportDirective",
        "scope": 417,
        "sourceUnit": 66,
        "src": "25:47:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 403,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 65,
              "src": "93:21:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$65",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 404,
            "nodeType": "InheritanceSpecifier",
            "src": "93:21:12"
          }
        ],
        "contractDependencies": [
          65
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 416,
        "linearizedBaseContracts": [
          416,
          65
        ],
        "name": "Memory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "151:287:12",
              "statements": [
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "158:6:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "158:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31323334353637",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "175:7:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1234567_by_1",
                          "typeString": "int_const 1234567"
                        },
                        "value": "1234567"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1234567_by_1",
                          "typeString": "int_const 1234567"
                        }
                      ],
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "167:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "158:25:12"
                },
                {
                  "externalReferences": [
                    {
                      "b": {
                        "declaration": 408,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "339:1:12",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 413,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let a := mload(0x40)\n    mstore(a, b)\n    mstore8(a, 4)\n    pop(msize())\n}",
                  "src": "190:243:12"
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:2:12"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "151:0:12"
            },
            "scope": 416,
            "src": "121:317:12",
            "stateMutability": "nonpayable",
            "superFunction": 49,
            "visibility": "public"
          }
        ],
        "scope": 417,
        "src": "74:369:12"
      }
    ],
    "src": "0:443:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-27T17:19:46.972Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}